@model IEnumerable<chatter.Models.Chat>

@{
    ViewBag.Title = "Chats";
}

<h2>Converse</h2>

<div>
    
    <textarea maxlength="140"  rows="3" cols="40" id="message"></textarea>
   <br />
   
    <button id="postChat" class="btn btn-primary">Chat</button>
    
    <button id="getChats" class="btn btn-primary">Get Chats</button>
</div>

<div id="allChats" class="chat-list">
</div>


@section Scripts {
    <script>
        $(document).ready(function () {

            //send chat to controller on click
            $('#postChat').click(function() {
                //assign variable to hold  message it can be sent to the controller usering the post method
                var message = $('#message').val();
                //use post method to send message to controller
                $.post("@Url.Action("PostChats", "Chats")", { "Message": message })
                //clear the input field
                $('#message').val("");
                //display all chats
                displayChats();
            });


            //update the chats area when the get chats button is clicked
            $('#getChats').click(displayChats);

            //Display chats on page load and then refresh every 10 seconds
            window.onload = function () {
                displayChats(); //loads chats on page load -- not a project requirement, but seems to make sense
                setInterval(displayChats, 10000); //runs displayChats function every 10 seconds
            }

            //display chats function that will be reused several times in script. 
            function displayChats() {
                $.get("@Url.Action("TestJson","Chats")", function (serverResponse) {
                    var jsonTest = JSON.parse(serverResponse);
                    console.log(jsonTest);

                    //grab area to append to 
                    var chatsList = $("#allChats");

                    //Reset the chats area by using the empty method -- no duplicates
                    chatsList.empty();
                    $.each(jsonTest, function (inx, val) {
                        //create html elements to hold the values
                        var chatContainer = $("<div class='chat-container'>");
                        var user = $("<p class='username'>");
                        var message = $("<p>");

                        // assign text of user and message for each chat to an html element
                        user.text(val.UserName);
                        message.text(val.Message);

                        //append user and message into the chatContainer
                        chatContainer.append(user);
                        chatContainer.append(message);

                        //append chatContainer to #chatsList                       
                        chatsList.append(chatContainer);  

                    });
                    
                })
            }
        });
    </script>
}





































@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Message)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TimeStamp)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AspNetUser.Email)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Message)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TimeStamp)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AspNetUser.Email)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>*@
